name: CI
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.8', '3.10']
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Install Poetry
        run: pip install --upgrade pip && pip install poetry

      - name: Install Project
        run: poetry install
      
      - name: Look for style errors
        run: poetry run flake8 beerlog tests
      
      - name: Look for auto format errors
        run: poetry run black -l 79 --check --diff beerlog tests
      
      - name: Run tests
        run: poetry run pytest -v --junitxml=test-result.xml

      # - name: Publish junit results
      #   uses: EnricoMi/publish-unit-test-result-action@v1
      #   if: always()
      #   with:
      #     files: test-result.xml
      #     check_name: Test Result (Python ${{matrix.python-version}})
  deploy:
    runs-on: ubuntu-latest
    needs: test
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Docker Hub login
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

      - name: Build image
        run: docker build -t umluizlima/beerlog:latest --file docker/Dockerfile .

      - name: Push to Docker Hub
        uses: actions-hub/docker@master
        with:
          args: push umluizlima/beerlog:latest

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
      #     aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      #     aws-region: eu-central-1

      # - name: Create Kubernetes deployment
      #   uses: kodermax/kubectl-aws-eks@master
      #   env:
      #     RELEASE_IMAGE: umluizlima/beerlog:latest
      #     KUBE_CONFIG_DATA: ${{secrets.KUBE_CONFIG_DATA}}
      #   with:
      #     args: apply -f kubernetes/deployment.yaml --record

      # - name: Create Kubernetes service
      #   uses: kodermax/kubectl-aws-eks@master
      #   env:
      #     RELEASE_IMAGE: umluizlima/beerlog:latest
      #     KUBE_CONFIG_DATA: ${{secrets.KUBE_CONFIG_DATA}}
      #   with:
      #     args: apply -f kubernetes/service.yaml --record
